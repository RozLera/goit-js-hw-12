{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://pixabay.com/api/';\n\nconst params = {\n  image_type: 'photo',\n  oriention: 'horizontal',\n  safesearch: true,\n};\n\nexport function getImagesByQuery(query) {\n  return axios('', {\n    params: {\n      q: query,\n      key: '50191530-19c60f56ef7d22126639596e8',\n      image_type: 'photo',\n      orientation: 'horizontal',\n      safesearch: true,\n    },\n  })\n    .then(res => res.data)\n    .catch(error => error);\n}\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst simpleLightbox = new SimpleLightbox('.js-gallery .image-link', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\nconst gallery = document.querySelector('.js-gallery');\n\nfunction createGallery(images) {\n  gallery.innerHTML = images\n    .map(\n      ({\n        tags,\n        largeImageURL,\n        webformatURL,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) =>\n        `<li class=\"gallery-item\">\n                <div>\n                  <a href=\"${largeImageURL}\" class=\"image-link\">\n                    <img\n                      src=\"${webformatURL}\"\n                      alt=\"${tags}\"\n                      class=\"gallery-image\"\n                    />\n                  </a>\n                </div>\n                <div>\n                  <ul class=\"image-info\">\n                    <li class=\"info-item\">\n                      <p class=\"info-value-tittle\">Likes</p>\n                      <p class=\"info-value\" data-likes>${likes}</p>\n                    </li>\n                    <li class=\"info-item\">\n                      <p class=\"info-value-tittle\">Views</p>\n                      <p class=\"info-value\" data-views>${views}</p>\n                    </li>\n                    <li class=\"info-item\">\n                      <p class=\"info-value-tittle\">Comments</p>\n                      <p class=\"info-value\" data-comments>${comments}</p>\n                    </li>\n                    <li class=\"info-item\">\n                      <p class=\"info-value-tittle\">Downloads</p>\n                      <p class=\"info-value\" data-downloads>${downloads}</p>\n                    </li>\n                  </ul>\n                </div>\n              </li>`\n    )\n    .join('');\n}\nfunction clearGallery() {\n  gallery.innerHTML = '';\n}\nfunction showLoader(element) {\n  element.classList.remove('hidden');\n}\nfunction hideLoader(element) {\n  element.classList.add('hidden');\n}\nexport { createGallery, clearGallery, showLoader, hideLoader, simpleLightbox };\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport { getImagesByQuery } from './js/pixabay-api';\nimport {\n  createGallery,\n  clearGallery,\n  showLoader,\n  hideLoader,\n  simpleLightbox,\n} from './js/render-functions';\n\nconst formEl = document.querySelector('.js-form');\nconst loader = document.querySelector('.js-loader');\n\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const query = event.target.elements['search-text'].value.trim();\n  if (query === '') {\n    iziToast.warning({\n      position: 'topRight',\n      message: 'Please enter the correct query!',\n    });\n    return;\n  }\n  clearGallery();\n  showLoader(loader);\n\n  getImagesByQuery(query)\n    .then(data => {\n      if (data.hits.length === 0) {\n        iziToast.warning({\n          position: 'topRight',\n          message:\n            'Sorry, there are no images matching your search query. Please try again!',\n        });\n        clearGallery();\n        return;\n      }\n\n      createGallery(data.hits);\n\n      simpleLightbox.refresh();\n    })\n    .catch(error => {\n      iziToast.error({\n        position: 'topRight',\n        message: `ERROR: ${error}`,\n      });\n    })\n    .finally(() => {\n      hideLoader(loader);\n      formEl.reset();\n    });\n}\n"],"names":["axios","getImagesByQuery","query","res","error","simpleLightbox","SimpleLightbox","gallery","createGallery","images","tags","largeImageURL","webformatURL","likes","views","comments","downloads","clearGallery","showLoader","element","hideLoader","formEl","loader","onFormSubmit","event","iziToast","data"],"mappings":"owBACAA,EAAM,SAAS,QAAU,2BAQlB,SAASC,EAAiBC,EAAO,CACtC,OAAOF,EAAM,GAAI,CACf,OAAQ,CACN,EAAGE,EACH,IAAK,qCACL,WAAY,QACZ,YAAa,aACb,WAAY,EACb,CACL,CAAG,EACE,KAAKC,GAAOA,EAAI,IAAI,EACpB,MAAMC,GAASA,CAAK,CACzB,CClBA,MAAMC,EAAiB,IAAIC,EAAe,0BAA2B,CACnE,aAAc,MACd,aAAc,GAChB,CAAC,EACKC,EAAU,SAAS,cAAc,aAAa,EAEpD,SAASC,EAAcC,EAAQ,CAC7BF,EAAQ,UAAYE,EACjB,IACC,CAAC,CACC,KAAAC,EACA,cAAAC,EACA,aAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACD,IACC;AAAA;AAAA,6BAEqBL,CAAa;AAAA;AAAA,6BAEbC,CAAY;AAAA,6BACZF,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDASwBG,CAAK;AAAA;AAAA;AAAA;AAAA,yDAILC,CAAK;AAAA;AAAA;AAAA;AAAA,4DAIFC,CAAQ;AAAA;AAAA;AAAA;AAAA,6DAIPC,CAAS;AAAA;AAAA;AAAA;AAAA,oBAKjE,EACA,KAAK,EAAE,CACZ,CACA,SAASC,GAAe,CACtBV,EAAQ,UAAY,EACtB,CACA,SAASW,EAAWC,EAAS,CAC3BA,EAAQ,UAAU,OAAO,QAAQ,CACnC,CACA,SAASC,EAAWD,EAAS,CAC3BA,EAAQ,UAAU,IAAI,QAAQ,CAChC,CCnDA,MAAME,EAAS,SAAS,cAAc,UAAU,EAC1CC,EAAS,SAAS,cAAc,YAAY,EAElDD,EAAO,iBAAiB,SAAUE,CAAY,EAE9C,SAASA,EAAaC,EAAO,CAC3BA,EAAM,eAAc,EAEpB,MAAMtB,EAAQsB,EAAM,OAAO,SAAS,aAAa,EAAE,MAAM,OACzD,GAAItB,IAAU,GAAI,CAChBuB,EAAS,QAAQ,CACf,SAAU,WACV,QAAS,iCACf,CAAK,EACD,MACD,CACDR,IACAC,EAAWI,CAAM,EAEjBrB,EAAiBC,CAAK,EACnB,KAAKwB,GAAQ,CACZ,GAAIA,EAAK,KAAK,SAAW,EAAG,CAC1BD,EAAS,QAAQ,CACf,SAAU,WACV,QACE,0EACZ,CAAS,EACDR,IACA,MACD,CAEDT,EAAckB,EAAK,IAAI,EAEvBrB,EAAe,QAAO,CAC5B,CAAK,EACA,MAAMD,GAAS,CACdqB,EAAS,MAAM,CACb,SAAU,WACV,QAAS,UAAUrB,CAAK,EAChC,CAAO,CACP,CAAK,EACA,QAAQ,IAAM,CACbgB,EAAWE,CAAM,EACjBD,EAAO,MAAK,CAClB,CAAK,CACL"}